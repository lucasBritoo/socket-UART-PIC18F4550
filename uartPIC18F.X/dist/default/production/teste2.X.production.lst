

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar  6 18:38:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  000194                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _envia
    65  000194  48                 	db	72
    66  0000                     _PORTBbits	set	3969
    67  0000                     _PORTE	set	3972
    68  0000                     _PORTD	set	3971
    69  0000                     _TXREG	set	4013
    70  0000                     _RCREG	set	4014
    71  0000                     _SPBRG	set	4015
    72  0000                     _BAUDCON	set	4024
    73  0000                     _RCSTA	set	4011
    74  0000                     _TXSTA	set	4012
    75  0000                     _INTCON	set	4082
    76  0000                     _TRISE	set	3990
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISC	set	3988
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISA	set	3986
    81  0000                     _LE0	set	31848
    82  0000                     _LE1	set	31849
    83  0000                     _RCIF	set	31989
    84  0000                     _RCIP	set	31997
    85  0000                     _RCIE	set	31981
    86  0000                     _IPEN	set	32391
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91  00011A                     __pcinit:
    92                           	callstack 0
    93  00011A                     start_initialization:
    94                           	callstack 0
    95  00011A                     __initialization:
    96                           	callstack 0
    97                           
    98                           ; Initialize objects allocated to COMRAM (1 bytes)
    99                           ; load TBLPTR registers with __pidataCOMRAM
   100  00011A  0E94               	movlw	low __pidataCOMRAM
   101  00011C  6EF6               	movwf	tblptrl,c
   102  00011E  0E01               	movlw	high __pidataCOMRAM
   103  000120  6EF7               	movwf	tblptrh,c
   104  000122  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   105  000124  6EF8               	movwf	tblptru,c
   106  000126  0009               	tblrd		*+	;fetch initializer
   107  000128  CFF5 F00C          	movff	tablat,__pdataCOMRAM
   108                           
   109                           ; Clear objects allocated to COMRAM (1 bytes)
   110  00012C  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   111  00012E                     end_of_initialization:
   112                           	callstack 0
   113  00012E                     __end_of__initialization:
   114                           	callstack 0
   115  00012E  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   116  000130  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   117  000132  0100               	movlb	0
   118  000134  EF3A  F000         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	bssCOMRAM
   121  00000B                     __pbssCOMRAM:
   122                           	callstack 0
   123  00000B                     _serial:
   124                           	callstack 0
   125  00000B                     	ds	1
   126                           
   127                           	psect	dataCOMRAM
   128  00000C                     __pdataCOMRAM:
   129                           	callstack 0
   130  00000C                     _envia:
   131                           	callstack 0
   132  00000C                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000001                     ??i2_lcd_write:
   138                           
   139                           ; 1 bytes @ 0x0
   140  000001                     	ds	1
   141  000002                     i2lcd_write@c:
   142                           	callstack 0
   143                           
   144                           ; 1 bytes @ 0x1
   145  000002                     	ds	1
   146  000003                     lcd_putch@c:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150  000003                     	ds	1
   151  000004                     tmr@serial:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x3
   155  000004                     	ds	1
   156  000005                     ??_lcd_write:
   157                           
   158                           ; 1 bytes @ 0x4
   159  000005                     	ds	1
   160  000006                     lcd_write@c:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x5
   164  000006                     	ds	1
   165  000007                     ??_lcd_clear:
   166                           
   167                           ; 1 bytes @ 0x6
   168  000007                     	ds	1
   169  000008                     ??_lcd_init:
   170                           
   171                           ; 1 bytes @ 0x7
   172  000008                     	ds	1
   173  000009                     ??_main:
   174                           
   175                           ; 1 bytes @ 0x8
   176  000009                     	ds	2
   177                           
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 28 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   197 ;;      Params:         0       0       0       0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0
   199 ;;      Temps:          2       0       0       0       0       0       0       0       0
   200 ;;      Totals:         2       0       0       0       0       0       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels required when called: 6
   203 ;; This function calls:
   204 ;;		_configura
   205 ;;		_lcd_clear
   206 ;;		_lcd_init
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213  000074                     __ptext0:
   214                           	callstack 0
   215  000074                     _main:
   216                           	callstack 25
   217  000074                     
   218                           ;main.c: 29:     configura();
   219  000074  EC64  F000         	call	_configura	;wreg free
   220  000078                     
   221                           ;main.c: 30:     PORTD = 0;
   222  000078  0E00               	movlw	0
   223  00007A  6E83               	movwf	131,c	;volatile
   224  00007C                     
   225                           ;main.c: 31:     PORTE = 0;
   226  00007C  0E00               	movlw	0
   227  00007E  6E84               	movwf	132,c	;volatile
   228                           
   229                           ;main.c: 33:     lcd_init();
   230  000080  EC09  F000         	call	_lcd_init	;wreg free
   231                           
   232                           ;main.c: 34:     lcd_clear();
   233  000084  ECB8  F000         	call	_lcd_clear	;wreg free
   234  000088                     
   235                           ;main.c: 35:     PORTBbits.RB0 = 0;
   236  000088  9081               	bcf	129,0,c	;volatile
   237  00008A                     
   238                           ;main.c: 36:     PORTBbits.RB2 = 0;
   239  00008A  9481               	bcf	129,2,c	;volatile
   240  00008C                     l868:
   241                           
   242                           ;main.c: 42:         PORTBbits.RB0 =1;
   243  00008C  8081               	bsf	129,0,c	;volatile
   244  00008E                     
   245                           ;main.c: 43:         _delay((unsigned long)((500)*(20000000/4000.0)));
   246  00008E  0E0D               	movlw	13
   247  000090  6E0A               	movwf	(??_main+1)^0,c
   248  000092  0EAF               	movlw	175
   249  000094  6E09               	movwf	??_main^0,c
   250  000096  0EB6               	movlw	182
   251  000098                     u47:
   252  000098  2EE8               	decfsz	wreg,f,c
   253  00009A  D7FE               	bra	u47
   254  00009C  2E09               	decfsz	??_main^0,f,c
   255  00009E  D7FC               	bra	u47
   256  0000A0  2E0A               	decfsz	(??_main+1)^0,f,c
   257  0000A2  D7FA               	bra	u47
   258  0000A4  D000               	nop2	
   259  0000A6                     
   260                           ;main.c: 44:         PORTBbits.RB0 = 0;
   261  0000A6  9081               	bcf	129,0,c	;volatile
   262  0000A8                     
   263                           ;main.c: 45:         _delay((unsigned long)((500)*(20000000/4000.0)));
   264  0000A8  0E0D               	movlw	13
   265  0000AA  6E0A               	movwf	(??_main+1)^0,c
   266  0000AC  0EAF               	movlw	175
   267  0000AE  6E09               	movwf	??_main^0,c
   268  0000B0  0EB6               	movlw	182
   269  0000B2                     u57:
   270  0000B2  2EE8               	decfsz	wreg,f,c
   271  0000B4  D7FE               	bra	u57
   272  0000B6  2E09               	decfsz	??_main^0,f,c
   273  0000B8  D7FC               	bra	u57
   274  0000BA  2E0A               	decfsz	(??_main+1)^0,f,c
   275  0000BC  D7FA               	bra	u57
   276  0000BE  D000               	nop2	
   277  0000C0  EF46  F000         	goto	l868
   278  0000C4  EF07  F000         	goto	start
   279  0000C8                     __end_of_main:
   280                           	callstack 0
   281                           
   282 ;; *************** function _lcd_init *****************
   283 ;; Defined at:
   284 ;;		line 92 in file "lcd.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  init_value      1    0        unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   298 ;;      Params:         0       0       0       0       0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0
   300 ;;      Temps:          1       0       0       0       0       0       0       0       0
   301 ;;      Totals:         1       0       0       0       0       0       0       0       0
   302 ;;Total ram usage:        1 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; Hardware stack levels required when called: 5
   305 ;; This function calls:
   306 ;;		_lcd_clear
   307 ;;		_lcd_write
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text1
   314  000012                     __ptext1:
   315                           	callstack 0
   316  000012                     _lcd_init:
   317                           	callstack 25
   318  000012                     
   319                           ;lcd.c: 98:  LE0 = 0;
   320  000012  908D               	bcf	3981,0,c	;volatile
   321  000014                     
   322                           ;lcd.c: 99:  LE1 = 0;
   323  000014  928D               	bcf	3981,1,c	;volatile
   324  000016                     
   325                           ;lcd.c: 102:  _delay((unsigned long)((15)*(20000000/4000.0)));
   326  000016  0E62               	movlw	98
   327  000018  6E08               	movwf	??_lcd_init^0,c
   328  00001A  0E66               	movlw	102
   329  00001C                     u67:
   330  00001C  2EE8               	decfsz	wreg,f,c
   331  00001E  D7FE               	bra	u67
   332  000020  2E08               	decfsz	??_lcd_init^0,f,c
   333  000022  D7FC               	bra	u67
   334  000024                     
   335                           ;lcd.c: 103:  PORTD = init_value;
   336  000024  0E03               	movlw	3
   337  000026  6E83               	movwf	131,c	;volatile
   338  000028                     
   339                           ;lcd.c: 104:  ((LE1 = 1),(LE1=0));
   340  000028  828D               	bsf	3981,1,c	;volatile
   341  00002A  928D               	bcf	3981,1,c	;volatile
   342  00002C                     
   343                           ;lcd.c: 105:  _delay((unsigned long)((5)*(20000000/4000.0)));
   344  00002C  0E21               	movlw	33
   345  00002E  6E08               	movwf	??_lcd_init^0,c
   346  000030  0E76               	movlw	118
   347  000032                     u77:
   348  000032  2EE8               	decfsz	wreg,f,c
   349  000034  D7FE               	bra	u77
   350  000036  2E08               	decfsz	??_lcd_init^0,f,c
   351  000038  D7FC               	bra	u77
   352  00003A  D000               	nop2	
   353  00003C                     
   354                           ;lcd.c: 106:  ((LE1 = 1),(LE1=0));
   355  00003C  828D               	bsf	3981,1,c	;volatile
   356  00003E  928D               	bcf	3981,1,c	;volatile
   357  000040                     
   358                           ;lcd.c: 107:  _delay((unsigned long)((200)*(20000000/4000000.0)));
   359  000040  0EC8               	movlw	200
   360  000042                     u87:
   361  000042  D000               	nop2	
   362  000044  2EE8               	decfsz	wreg,f,c
   363  000046  D7FD               	bra	u87
   364  000048                     
   365                           ;lcd.c: 108:  ((LE1 = 1),(LE1=0));
   366  000048  828D               	bsf	3981,1,c	;volatile
   367  00004A  928D               	bcf	3981,1,c	;volatile
   368  00004C                     
   369                           ;lcd.c: 109:  _delay((unsigned long)((200)*(20000000/4000000.0)));
   370  00004C  0EC8               	movlw	200
   371  00004E                     u97:
   372  00004E  D000               	nop2	
   373  000050  2EE8               	decfsz	wreg,f,c
   374  000052  D7FD               	bra	u97
   375                           
   376                           ;lcd.c: 110:  PORTD = 2;
   377  000054  0E02               	movlw	2
   378  000056  6E83               	movwf	131,c	;volatile
   379  000058                     
   380                           ;lcd.c: 111:  ((LE1 = 1),(LE1=0));
   381  000058  828D               	bsf	3981,1,c	;volatile
   382  00005A  928D               	bcf	3981,1,c	;volatile
   383  00005C                     
   384                           ;lcd.c: 113:  lcd_write(0x38);
   385  00005C  0E38               	movlw	56
   386  00005E  EC9C  F000         	call	_lcd_write
   387  000062                     
   388                           ;lcd.c: 114:  lcd_write(0x06);
   389  000062  0E06               	movlw	6
   390  000064  EC9C  F000         	call	_lcd_write
   391  000068                     
   392                           ;lcd.c: 115:  lcd_write(0x0C);
   393  000068  0E0C               	movlw	12
   394  00006A  EC9C  F000         	call	_lcd_write
   395  00006E                     
   396                           ;lcd.c: 116:  lcd_clear();
   397  00006E  ECB8  F000         	call	_lcd_clear	;wreg free
   398  000072  0012               	return		;funcret
   399  000074                     __end_of_lcd_init:
   400                           	callstack 0
   401                           
   402 ;; *************** function _lcd_clear *****************
   403 ;; Defined at:
   404 ;;		line 52 in file "lcd.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   418 ;;      Params:         0       0       0       0       0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0
   420 ;;      Temps:          1       0       0       0       0       0       0       0       0
   421 ;;      Totals:         1       0       0       0       0       0       0       0       0
   422 ;;Total ram usage:        1 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; Hardware stack levels required when called: 4
   425 ;; This function calls:
   426 ;;		_lcd_write
   427 ;; This function is called by:
   428 ;;		_main
   429 ;;		_lcd_init
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text2
   434  000170                     __ptext2:
   435                           	callstack 0
   436  000170                     _lcd_clear:
   437                           	callstack 25
   438  000170                     
   439                           ;lcd.c: 54:  LE0 = 0;
   440  000170  908D               	bcf	3981,0,c	;volatile
   441  000172                     
   442                           ;lcd.c: 55:  lcd_write(0x01);
   443  000172  0E01               	movlw	1
   444  000174  EC9C  F000         	call	_lcd_write
   445  000178                     
   446                           ;lcd.c: 56:  _delay((unsigned long)((2)*(20000000/4000.0)));
   447  000178  0E0D               	movlw	13
   448  00017A  6E07               	movwf	??_lcd_clear^0,c
   449  00017C  0EFC               	movlw	252
   450  00017E                     u107:
   451  00017E  2EE8               	decfsz	wreg,f,c
   452  000180  D7FE               	bra	u107
   453  000182  2E07               	decfsz	??_lcd_clear^0,f,c
   454  000184  D7FC               	bra	u107
   455  000186  0012               	return		;funcret
   456  000188                     __end_of_lcd_clear:
   457                           	callstack 0
   458                           
   459 ;; *************** function _lcd_write *****************
   460 ;; Defined at:
   461 ;;		line 38 in file "lcd.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  c               1    wreg     unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  c               1    5[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   475 ;;      Params:         0       0       0       0       0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0
   477 ;;      Temps:          1       0       0       0       0       0       0       0       0
   478 ;;      Totals:         2       0       0       0       0       0       0       0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 3
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_lcd_clear
   486 ;;		_lcd_init
   487 ;;		_lcd_puts
   488 ;;		_lcd_goto
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text3
   493  000138                     __ptext3:
   494                           	callstack 0
   495  000138                     _lcd_write:
   496                           	callstack 26
   497                           
   498                           ;incstack = 0
   499                           ;lcd_write@c stored from wreg
   500  000138  6E06               	movwf	lcd_write@c^0,c
   501  00013A                     
   502                           ;lcd.c: 38: lcd_write(unsigned char c);lcd.c: 39: {;lcd.c: 40:  _delay((unsigned long)((
      +                          1)*(20000000/4000.0)));
   503  00013A  0E07               	movlw	7
   504  00013C  6E05               	movwf	??_lcd_write^0,c
   505  00013E  0E7D               	movlw	125
   506  000140                     u117:
   507  000140  2EE8               	decfsz	wreg,f,c
   508  000142  D7FE               	bra	u117
   509  000144  2E05               	decfsz	??_lcd_write^0,f,c
   510  000146  D7FC               	bra	u117
   511  000148  F000               	nop	
   512  00014A                     
   513                           ;lcd.c: 41:     PORTD = ( c );
   514  00014A  C006  FF83         	movff	lcd_write@c,3971	;volatile
   515  00014E                     
   516                           ;lcd.c: 42:  ((LE1 = 1),(LE1=0));
   517  00014E  828D               	bsf	3981,1,c	;volatile
   518  000150  928D               	bcf	3981,1,c	;volatile
   519  000152  0012               	return		;funcret
   520  000154                     __end_of_lcd_write:
   521                           	callstack 0
   522                           
   523 ;; *************** function _configura *****************
   524 ;; Defined at:
   525 ;;		line 74 in file "./config.h"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   539 ;;      Params:         0       0       0       0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 3
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text4
   554  0000C8                     __ptext4:
   555                           	callstack 0
   556  0000C8                     _configura:
   557                           	callstack 27
   558  0000C8  0EDF               	movlw	223
   559  0000CA  6E92               	movwf	146,c	;volatile
   560  0000CC  0EFA               	movlw	250
   561  0000CE  6E93               	movwf	147,c	;volatile
   562  0000D0  6894               	setf	148,c	;volatile
   563  0000D2  0E00               	movlw	0
   564  0000D4  6E95               	movwf	149,c	;volatile
   565  0000D6  0E0C               	movlw	12
   566  0000D8  6E96               	movwf	150,c	;volatile
   567  0000DA  8ED0               	bsf	4048,7,c	;volatile
   568  0000DC  0EC0               	movlw	192
   569  0000DE  6EF2               	movwf	242,c	;volatile
   570  0000E0  8A9D               	bsf	3997,5,c	;volatile
   571  0000E2  8A9F               	bsf	3999,5,c	;volatile
   572  0000E4  0E24               	movlw	36
   573  0000E6  6EAC               	movwf	172,c	;volatile
   574  0000E8  0E90               	movlw	144
   575  0000EA  6EAB               	movwf	171,c	;volatile
   576  0000EC  0E00               	movlw	0
   577  0000EE  6EB8               	movwf	184,c	;volatile
   578  0000F0  0E81               	movlw	129
   579  0000F2  6EAF               	movwf	175,c	;volatile
   580  0000F4  0012               	return		;funcret
   581  0000F6                     __end_of_configura:
   582                           	callstack 0
   583                           
   584 ;; *************** function _tmr *****************
   585 ;; Defined at:
   586 ;;		line 16 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  serial          1    3[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   600 ;;      Params:         0       0       0       0       0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 2
   607 ;; This function calls:
   608 ;;		_lcd_putch
   609 ;; This function is called by:
   610 ;;		Interrupt level 2
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	intcode
   615  000008                     __pintcode:
   616                           	callstack 0
   617  000008                     _tmr:
   618                           	callstack 25
   619                           
   620                           ;incstack = 0
   621  000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   622  00000A  ED7B  F000         	call	int_func,f	;refresh shadow registers
   623                           
   624                           	psect	intcode_body
   625  0000F6                     __pintcode_body:
   626                           	callstack 25
   627  0000F6                     int_func:
   628                           	callstack 25
   629  0000F6  0006               	pop		; remove dummy address from shadow register refresh
   630  0000F8                     
   631                           ;main.c: 17:     if(RCIF){
   632  0000F8  AA9E               	btfss	3998,5,c	;volatile
   633  0000FA  EF81  F000         	goto	i2u3_41
   634  0000FE  EF83  F000         	goto	i2u3_40
   635  000102                     i2u3_41:
   636  000102  EF8B  F000         	goto	i2l59
   637  000106                     i2u3_40:
   638  000106                     
   639                           ;main.c: 19:         char serial = RCREG;
   640  000106  CFAE F004          	movff	4014,tmr@serial	;volatile
   641  00010A                     
   642                           ;main.c: 20:         lcd_putch(serial);
   643  00010A  5004               	movf	tmr@serial^0,w,c
   644  00010C  ECC4  F000         	call	_lcd_putch
   645  000110                     
   646                           ;main.c: 22:         RCIF =0;
   647  000110  9A9E               	bcf	3998,5,c	;volatile
   648  000112                     
   649                           ;main.c: 24:         TXREG = envia;
   650  000112  C00C  FFAD         	movff	_envia,4013	;volatile
   651  000116                     i2l59:
   652  000116  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   653  000118  0011               	retfie		f
   654  00011A                     __end_of_tmr:
   655                           	callstack 0
   656                           
   657 ;; *************** function _lcd_putch *****************
   658 ;; Defined at:
   659 ;;		line 72 in file "lcd.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  c               1    wreg     unsigned char 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  c               1    2[COMRAM] unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   673 ;;      Params:         0       0       0       0       0       0       0       0       0
   674 ;;      Locals:         1       0       0       0       0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0
   676 ;;      Totals:         1       0       0       0       0       0       0       0       0
   677 ;;Total ram usage:        1 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 1
   680 ;; This function calls:
   681 ;;		i2_lcd_write
   682 ;; This function is called by:
   683 ;;		_tmr
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text6
   688  000188                     __ptext6:
   689                           	callstack 0
   690  000188                     _lcd_putch:
   691                           	callstack 25
   692                           
   693                           ;incstack = 0
   694                           ;lcd_putch@c stored from wreg
   695  000188  6E03               	movwf	lcd_putch@c^0,c
   696  00018A                     
   697                           ;lcd.c: 72: lcd_putch(char c);lcd.c: 73: {;lcd.c: 74:  LE0 = 1;
   698  00018A  808D               	bsf	3981,0,c	;volatile
   699  00018C                     
   700                           ;lcd.c: 75:  lcd_write( c );
   701  00018C  5003               	movf	lcd_putch@c^0,w,c
   702  00018E  ECAA  F000         	call	i2_lcd_write
   703  000192  0012               	return		;funcret
   704  000194                     __end_of_lcd_putch:
   705                           	callstack 0
   706                           
   707 ;; *************** function i2_lcd_write *****************
   708 ;; Defined at:
   709 ;;		line 38 in file "lcd.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  c               1    wreg     unsigned char 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  c               1    1[COMRAM] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   723 ;;      Params:         0       0       0       0       0       0       0       0       0
   724 ;;      Locals:         1       0       0       0       0       0       0       0       0
   725 ;;      Temps:          1       0       0       0       0       0       0       0       0
   726 ;;      Totals:         2       0       0       0       0       0       0       0       0
   727 ;;Total ram usage:        2 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_lcd_putch
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text7
   737  000154                     __ptext7:
   738                           	callstack 0
   739  000154                     i2_lcd_write:
   740                           	callstack 25
   741                           
   742                           ;incstack = 0
   743                           ;i2lcd_write@c stored from wreg
   744  000154  6E02               	movwf	i2lcd_write@c^0,c
   745  000156                     
   746                           ;lcd.c: 38: lcd_write(unsigned char c);lcd.c: 39: {;lcd.c: 40:  _delay((unsigned long)((
      +                          1)*(20000000/4000.0)));
   747  000156  0E07               	movlw	7
   748  000158  6E01               	movwf	??i2_lcd_write^0,c
   749  00015A  0E7D               	movlw	125
   750  00015C                     i2u12_47:
   751  00015C  2EE8               	decfsz	wreg,f,c
   752  00015E  D7FE               	bra	i2u12_47
   753  000160  2E01               	decfsz	??i2_lcd_write^0,f,c
   754  000162  D7FC               	bra	i2u12_47
   755  000164  F000               	nop	
   756  000166                     
   757                           ;lcd.c: 41:     PORTD = ( c );
   758  000166  C002  FF83         	movff	i2lcd_write@c,3971	;volatile
   759  00016A                     
   760                           ;lcd.c: 42:  ((LE1 = 1),(LE1=0));
   761  00016A  828D               	bsf	3981,1,c	;volatile
   762  00016C  928D               	bcf	3981,1,c	;volatile
   763  00016E  0012               	return		;funcret
   764  000170                     __end_ofi2_lcd_write:
   765                           	callstack 0
   766  0000                     
   767                           	psect	rparam
   768  0000                     
   769                           	psect	temp
   770  00000D                     btemp:
   771                           	callstack 0
   772  00000D                     	ds	1
   773  0000                     int$flags	set	btemp
   774  0000                     wtemp8	set	btemp+1
   775  0000                     ttemp5	set	btemp+1
   776  0000                     ttemp6	set	btemp+4
   777  0000                     ttemp7	set	btemp+8
   778                           
   779                           	psect	idloc
   780                           
   781                           ;Config register IDLOC0 @ 0x200000
   782                           ;	unspecified, using default values
   783  200000                     	org	2097152
   784  200000  FF                 	db	255
   785                           
   786                           ;Config register IDLOC1 @ 0x200001
   787                           ;	unspecified, using default values
   788  200001                     	org	2097153
   789  200001  FF                 	db	255
   790                           
   791                           ;Config register IDLOC2 @ 0x200002
   792                           ;	unspecified, using default values
   793  200002                     	org	2097154
   794  200002  FF                 	db	255
   795                           
   796                           ;Config register IDLOC3 @ 0x200003
   797                           ;	unspecified, using default values
   798  200003                     	org	2097155
   799  200003  FF                 	db	255
   800                           
   801                           ;Config register IDLOC4 @ 0x200004
   802                           ;	unspecified, using default values
   803  200004                     	org	2097156
   804  200004  FF                 	db	255
   805                           
   806                           ;Config register IDLOC5 @ 0x200005
   807                           ;	unspecified, using default values
   808  200005                     	org	2097157
   809  200005  FF                 	db	255
   810                           
   811                           ;Config register IDLOC6 @ 0x200006
   812                           ;	unspecified, using default values
   813  200006                     	org	2097158
   814  200006  FF                 	db	255
   815                           
   816                           ;Config register IDLOC7 @ 0x200007
   817                           ;	unspecified, using default values
   818  200007                     	org	2097159
   819  200007  FF                 	db	255
   820                           
   821                           	psect	config
   822                           
   823                           ;Config register CONFIG1L @ 0x300000
   824                           ;	PLL Prescaler Selection bits
   825                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
   826                           ;	System Clock Postscaler Selection bits
   827                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   828                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   829                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   830  300000                     	org	3145728
   831  300000  04                 	db	4
   832                           
   833                           ;Config register CONFIG1H @ 0x300001
   834                           ;	Oscillator Selection bits
   835                           ;	FOSC = HS, HS oscillator (HS)
   836                           ;	Fail-Safe Clock Monitor Enable bit
   837                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   838                           ;	Internal/External Oscillator Switchover bit
   839                           ;	IESO = OFF, Oscillator Switchover mode disabled
   840  300001                     	org	3145729
   841  300001  0C                 	db	12
   842                           
   843                           ;Config register CONFIG2L @ 0x300002
   844                           ;	Power-up Timer Enable bit
   845                           ;	PWRT = ON, PWRT enabled
   846                           ;	Brown-out Reset Enable bits
   847                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   848                           ;	Brown-out Reset Voltage bits
   849                           ;	BORV = 3, Minimum setting 2.05V
   850                           ;	USB Voltage Regulator Enable bit
   851                           ;	VREGEN = OFF, USB voltage regulator disabled
   852  300002                     	org	3145730
   853  300002  18                 	db	24
   854                           
   855                           ;Config register CONFIG2H @ 0x300003
   856                           ;	Watchdog Timer Enable bit
   857                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   858                           ;	Watchdog Timer Postscale Select bits
   859                           ;	WDTPS = 32768, 1:32768
   860  300003                     	org	3145731
   861  300003  1E                 	db	30
   862                           
   863                           ; Padding undefined space
   864  300004                     	org	3145732
   865  300004  FF                 	db	255
   866                           
   867                           ;Config register CONFIG3H @ 0x300005
   868                           ;	CCP2 MUX bit
   869                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
   870                           ;	PORTB A/D Enable bit
   871                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   872                           ;	Low-Power Timer 1 Oscillator Enable bit
   873                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   874                           ;	MCLR Pin Enable bit
   875                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   876  300005                     	org	3145733
   877  300005  00                 	db	0
   878                           
   879                           ;Config register CONFIG4L @ 0x300006
   880                           ;	Stack Full/Underflow Reset Enable bit
   881                           ;	STVREN = ON, Stack full/underflow will cause Reset
   882                           ;	Single-Supply ICSP Enable bit
   883                           ;	LVP = OFF, Single-Supply ICSP disabled
   884                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   885                           ;	ICPRT = OFF, ICPORT disabled
   886                           ;	Extended Instruction Set Enable bit
   887                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   888                           ;	Background Debugger Enable bit
   889                           ;	DEBUG = 0x1, unprogrammed default
   890  300006                     	org	3145734
   891  300006  81                 	db	129
   892                           
   893                           ; Padding undefined space
   894  300007                     	org	3145735
   895  300007  FF                 	db	255
   896                           
   897                           ;Config register CONFIG5L @ 0x300008
   898                           ;	Code Protection bit
   899                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   900                           ;	Code Protection bit
   901                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   902                           ;	Code Protection bit
   903                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   904                           ;	Code Protection bit
   905                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   906  300008                     	org	3145736
   907  300008  0F                 	db	15
   908                           
   909                           ;Config register CONFIG5H @ 0x300009
   910                           ;	Boot Block Code Protection bit
   911                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   912                           ;	Data EEPROM Code Protection bit
   913                           ;	CPD = OFF, Data EEPROM is not code-protected
   914  300009                     	org	3145737
   915  300009  C0                 	db	192
   916                           
   917                           ;Config register CONFIG6L @ 0x30000A
   918                           ;	Write Protection bit
   919                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   920                           ;	Write Protection bit
   921                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   922                           ;	Write Protection bit
   923                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   924                           ;	Write Protection bit
   925                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   926  30000A                     	org	3145738
   927  30000A  0F                 	db	15
   928                           
   929                           ;Config register CONFIG6H @ 0x30000B
   930                           ;	Configuration Register Write Protection bit
   931                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   932                           ;	Boot Block Write Protection bit
   933                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   934                           ;	Data EEPROM Write Protection bit
   935                           ;	WRTD = OFF, Data EEPROM is not write-protected
   936  30000B                     	org	3145739
   937  30000B  E0                 	db	224
   938                           
   939                           ;Config register CONFIG7L @ 0x30000C
   940                           ;	Table Read Protection bit
   941                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   942                           ;	Table Read Protection bit
   943                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   944                           ;	Table Read Protection bit
   945                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   946                           ;	Table Read Protection bit
   947                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   948  30000C                     	org	3145740
   949  30000C  0F                 	db	15
   950                           
   951                           ;Config register CONFIG7H @ 0x30000D
   952                           ;	Boot Block Table Read Protection bit
   953                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   954  30000D                     	org	3145741
   955  30000D  40                 	db	64
   956                           tosu	equ	0xFFF
   957                           tosh	equ	0xFFE
   958                           tosl	equ	0xFFD
   959                           stkptr	equ	0xFFC
   960                           pclatu	equ	0xFFB
   961                           pclath	equ	0xFFA
   962                           pcl	equ	0xFF9
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           prodh	equ	0xFF4
   968                           prodl	equ	0xFF3
   969                           indf0	equ	0xFEF
   970                           postinc0	equ	0xFEE
   971                           postdec0	equ	0xFED
   972                           preinc0	equ	0xFEC
   973                           plusw0	equ	0xFEB
   974                           fsr0h	equ	0xFEA
   975                           fsr0l	equ	0xFE9
   976                           wreg	equ	0xFE8
   977                           indf1	equ	0xFE7
   978                           postinc1	equ	0xFE6
   979                           postdec1	equ	0xFE5
   980                           preinc1	equ	0xFE4
   981                           plusw1	equ	0xFE3
   982                           fsr1h	equ	0xFE2
   983                           fsr1l	equ	0xFE1
   984                           bsr	equ	0xFE0
   985                           indf2	equ	0xFDF
   986                           postinc2	equ	0xFDE
   987                           postdec2	equ	0xFDD
   988                           preinc2	equ	0xFDC
   989                           plusw2	equ	0xFDB
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write

Critical Paths under _tmr in COMRAM

    _tmr->_lcd_putch
    _lcd_putch->i2_lcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tmr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tmr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tmr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tmr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tmr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tmr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              8 COMRAM     2     2      0
                          _configura
                          _lcd_clear
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      45
                                              7 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      15
                                              6 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0      15
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configura                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tmr                                                  1     1      0      67
                                              3 COMRAM     1     1      0
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (5) _lcd_putch                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        i2_lcd_write
 ---------------------------------------------------------------------------------
 (6) i2_lcd_write                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configura
   _lcd_clear
     _lcd_write
   _lcd_init
     _lcd_clear
     _lcd_write

 _tmr (ROOT)
   _lcd_putch
     i2_lcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       C       1       12.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      20        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar  6 18:38:21 2021

                     l49 00F4                       l81 0186                       l78 0152  
                     l96 0072                       u47 0098                       u57 00B2  
                     u67 001C                       u77 0032                       u87 0042  
                     u97 004E                      l800 00E0                      l802 00E2  
                    l810 0012                      l820 002A                      l812 0014  
                    l830 0048                      l822 002C                      l814 0016  
                    l840 005C                      l832 004A                      l824 003C  
                    l816 0024                      l808 0012                      l842 0062  
                    l834 004C                      l826 003E                      l818 0028  
                    l772 013A                      l780 0170                      l844 0068  
                    l836 0058                      l828 0040                      l860 0078  
                    l774 014A                      l782 0172                      l846 006E  
                    l838 005A                      l870 008E                      l862 007C  
                    l776 014E                      l784 0178                      l872 00A6  
                    l864 0088                      l794 00C8                      l778 0150  
                    l874 00A8                      l866 008A                      l858 0074  
                    _LE0 007C68                      _LE1 007C69                      l796 00D0  
                    l868 008C                      l798 00DA                      u107 017E  
                    u117 0140                      _tmr 0008                      wreg 000FE8  
                   ?_tmr 0001                     _IPEN 007E87                     _RCIE 007CED  
                   _RCIF 007CF5                     _RCIP 007CFD                     i2l90 0192  
                   i2l59 0116                     i2l78 016E                     _main 0074  
                   btemp 000D                     start 000E             ___param_bank 000000  
                  ??_tmr 0004                    ?_main 0001              i2_lcd_write 0154  
                  i2l900 00F8                    i2l902 0106                    i2l904 010A  
                  i2l906 0110                    i2l908 0112                    i2l890 0166  
                  i2l892 016A                    i2l894 016C                    i2l888 0156  
                  i2l896 018A                    i2l898 018C                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC                    _envia 000C  
                  tablat 000FF5                    ttemp5 000E                    ttemp6 0011  
                  ttemp7 0015                    wtemp8 000E          __initialization 011A  
           __end_of_main 00C8                   ??_main 0009            __activetblptr 000000  
                 _INTCON 000FF2                   i2u3_40 0106                   i2u3_41 0102  
       __end_of_lcd_init 0074                   _serial 000B                   isa$std 000001  
           __pdataCOMRAM 000C                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 012E  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_lcd_clear 0018  
     __size_of_configura 002E       __size_of_lcd_putch 000C       __size_of_lcd_write 001C  
           i2lcd_write@c 0002                  _BAUDCON 000FB8             ?i2_lcd_write 0001  
                i2u12_47 015C                ?_lcd_init 0001                  __Hparam 0000  
                __Lparam 0000        __end_of_lcd_clear 0188        __end_of_configura 00F6  
      __end_of_lcd_putch 0194        __end_of_lcd_write 0154                  __pcinit 011A  
                __ramtop 0800                  __ptext0 0074                  __ptext1 0012  
                __ptext2 0170                  __ptext3 0138                  __ptext4 00C8  
                __ptext6 0188                  __ptext7 0154             __size_of_tmr 0112  
             ??_lcd_init 0008           __pintcode_body 00F6     end_of_initialization 012E  
                int_func 00F6                _PORTBbits 000F81               lcd_putch@c 0003  
             lcd_write@c 0006            __pidataCOMRAM 0194      start_initialization 011A  
   __size_ofi2_lcd_write 001C              __end_of_tmr 011A              __pbssCOMRAM 000B  
      __size_of_lcd_init 0062                __pintcode 0008                _lcd_clear 0170  
              _configura 00C8                _lcd_putch 0188                _lcd_write 0138  
             ?_lcd_clear 0001               ?_configura 0001               ?_lcd_putch 0001  
             ?_lcd_write 0001                 __Hrparam 0000                 __Lrparam 0000  
               _lcd_init 0012            __size_of_main 0054                tmr@serial 0004  
               isa$xinst 000000                 int$flags 000D              ??_lcd_clear 0007  
            ??_configura 0005              ??_lcd_putch 0003            ??i2_lcd_write 0001  
            ??_lcd_write 0005                 intlevel2 0000      __end_ofi2_lcd_write 0170  
